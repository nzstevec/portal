version: 0.2

env:
  shell: bash
  variables:
    PYTHON_VERSION: "3.11"
    CONDA_ENV: "portal"

  exported-variables:
    - ENVIRONMENT

phases:
  install:
    runtime-versions:
      python: $PYTHON_VERSION
    commands:
      - ENVIRONMENT="${env}"
      - echo "ENVIRONMENT is $ENVIRONMENT"
      # - |
      #   if [ "$ENVIRONMENT" == "dev" ]; then
      #     cp cloudformation/dev-portal.yml template.yml
      #   elif [ "$ENVIRONMENT" == "test" ]; then
      #     cp cloudformation/fishbowl-portal.yml template.yml
      #   else
      #     echo "Invalid environment specified: $ENVIRONMENT"
      #     exit 1
      #   fi
      - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      - source $HOME/.cargo/env
      - echo "Installing Miniconda..."
      - curl https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -o miniconda.sh
      - bash miniconda.sh -b -p $HOME/miniconda
      - export PATH="$HOME/miniconda/bin:$PATH"
      - echo "Creating and activating Conda environment..."
      - conda create -n $CONDA_ENV python=$PYTHON_VERSION
      - source activate $CONDA_ENV
      - pip install awscli

  pre_build:
    commands:
      - echo "Installing project dependencies..."
      - pip install --upgrade pip
      - pip install -r backend/requirements.txt
      - SECRET_VALUE=$(aws secretsmanager get-secret-value --secret-id dev_portal_secrets --query SecretString --output text)
      - DOCKER_PASSWORD=$(echo $SECRET_VALUE | jq -r '.docker_hub_pw')
      - DOCKER_USER=$(echo $SECRET_VALUE | jq -r '.docker_hub_user')
      - GITHUB_PAT=$(echo $SECRET_VALUE | jq -r '.git_hub_pat')
      - GITHUB_USER=$(echo $SECRET_VALUE | jq -r '.git_hub_user')
      - mkdir /tmp/repo
      - cd /tmp/repo
      - git config --global credential.helper '!aws codecommit credential-helper $@'
      - git config --global credential.helper '!f() { echo "username=x-access-token"; echo "password=$GITHUB_PAT"; }; f'
      - git config --global credential.UseHttpPath true
      # clone the git repo to get the git commit hash which will be used in the docker image version
      - git clone https://github.com/nzstevec/portal.git
      - cd portal
      - COMMIT_HASH=$(git log -n 1 --pretty=format:"%H" | cut -c1-7)
      - cd $CODEBUILD_SRC_DIR
      - export IMAGE_TAG="$COMMIT_HASH"
      - export DEFAULT_TAG="GitHash"
      - sed -n "12,19p" template.yml
      - sed -i "s/$DEFAULT_TAG/$IMAGE_TAG/g" template.yml
      - sed -n "12,19p" template.yml
      - export IMAGE=$(cat template.yml | grep -A2 "Image:" | awk 'NR==3 {print $2}' | tr -d '"')
      - export IMAGE_VERSION=$(cat template.yml | grep -A2 "ImageVersion:" | awk 'NR==3 {print $2}' | tr -d '"')
      - export IMAGE_NAME="$IMAGE:$IMAGE_VERSION"
      - echo "Image name is $IMAGE_NAME"

  build:
    commands:
      - echo "Building frontend..."
      - cd frontend
      - npm install
      - npm run build
      - echo "Frontend build completed, the backend will be built in the docker image creation phase..."
      - cd $CODEBUILD_SRC_DIR
      # - echo "Building backend..."
      # - cd backend
      # - echo "Installing the project in editable mode..."
      # - python -m pip install -e .
      # - echo "Build completed!"
      - echo "Logging in to Docker..."
      - docker login -u "$DOCKER_USER" -p "$DOCKER_PASSWORD"
      - echo "Building Docker image..."
      - docker build -t "$IMAGE_NAME" .
      - echo "Pushing Docker image to registry..."
      - docker push "$IMAGE_NAME"

artifacts:
  files:
    - template.yml
    - pytest-reports-test/**/*
    - pytest-reports-coverage/**/*
    - automated_testing/**/*
    # - **/*
  discard-paths: yes
  base-directory: '.'
# reports:
#   pytest-reports-test: # the name is important, it must end with 'test'
#     files:
#       - report.xml
#     base-directory: pytest-reports-test
#     file-format: JUNITXML
#   pytest-reports-coverage: # the name is important, it must end with 'coverage'
#     files:
#       - coverage.xml
#     base-directory: pytest-reports-coverage
#     file-format: COBERTURAXML
